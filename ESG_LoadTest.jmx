<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Default">
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <stringProp name="HTTPSampler.proxyHost">127.0.0.1</stringProp>
        <intProp name="HTTPSampler.proxyPort">9000</intProp>
        <intProp name="HTTPSampler.connect_timeout">10000</intProp>
        <intProp name="HTTPSampler.response_timeout">60000</intProp>
        <stringProp name="HTTPSampler.domain">c2jd1duph3.execute-api.eu-west-1.amazonaws.com</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Env" elementType="Argument">
            <stringProp name="Argument.name">Env</stringProp>
            <stringProp name="Argument.value">int</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="User_Email" elementType="Argument">
            <stringProp name="Argument.name">User_Email</stringProp>
            <stringProp name="Argument.value">sukesh.esg@volkswagen.de</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">eyJraWQiOiJSdWd5a25uOEp2Zmo2anpqQ3E2XC9QVmVTMG1NRTVscXdrXC9xTHBZY2c3ZFk9IiwiYWxnIjoiUlMyNTYifQ.eyJhdF9oYXNoIjoiRGZHRFNLUGJhbEpHOUM3VXhwQ0FIQSIsInN1YiI6ImQyYTVkNDM0LWEwYTEtNzAyYy0xZWRjLTJkZGQwMjIxYWIxMCIsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC5ldS13ZXN0LTEuYW1hem9uYXdzLmNvbVwvZXUtd2VzdC0xX2tTVDlLZldPdiIsImNvZ25pdG86dXNlcm5hbWUiOiJzdWtlc2giLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJzdWtlc2giLCJjdXN0b206Z3JvdXBzIjoiW1wiVldBR19FU0dESV9CQVNJQ19FTkRfVVNFUlwiXSIsIm9yaWdpbl9qdGkiOiJkYzI3NTkyMi1lMTU5LTQ3MTctYjQ5MC1kNzUwYjc2ODM2YmEiLCJhdWQiOiI2MTE3N3ZuZjg0a205dmMwZTZrZHFiaGh0ZSIsImV2ZW50X2lkIjoiYWNlZTE5ZDQtOWMyMC00Yjc3LTg1MzMtZjY2Y2MwOGNkMjQ1IiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE3NTI3Mjg1NjAsIm5hbWUiOiJzdWtlc2giLCJleHAiOjE3NTI3NzE3NjAsImlhdCI6MTc1MjcyODU2MCwianRpIjoiYzkzZjQyNjYtOWEwNy00NGVmLTgyZjgtYjU2YjVkZDM5NTVlIiwiZW1haWwiOiJzdWtlc2guZXNnQHZvbGtzd2FnZW4uZGUifQ.eBbvWKHb_qsgQrY6uqwdH-7rkdhFRIfK_hZo2XwXX2Bubfsf64DnZ41lqbsdoTzLciGac_PbCqI1RehDkG_m92yTIki9sdExNCXDIda1FU1A6HuwybjmDWKXhcKMUlFZOS7JE8jpzoh9pxDEDaurJpcTgMbxCvVlQ3Pz_wisdbKfYLE3GElgsKnkCbVvJ3t-hAF5DzvGR-uN_LDTtQz9TE7PJJKgzqpYAExICBTZ0okroXijnW7Y5tNxjldmVA7MSnC_gZWhgwaLUvd9DXxm96g8TH2ludIEH9RR4zd8o1HgvUSbqbUymgypbLh_E02VUOtQyY1EIFV--T1eJ7jOwQ</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:/apache-jmeter-5.6.3/TestScripts/ESG_Load_Test_Dry_Run/LoadTestData.csv</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">Datapoint_Code,Org_ID</stringProp>
      </CSVDataSet>
      <hashTree/>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="Ultimate Thread Group">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="98197576">
            <stringProp name="1603">25</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="53430">600</stringProp>
            <stringProp name="1572771">3600</stringProp>
            <stringProp name="53430">600</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Getdatapoint" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Getdatapoint : ${Datapoint_Code}" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDatapoint--&gt; ${Datapoint_Code}" enabled="true">
            <stringProp name="HTTPSampler.path">/${Env}/getDatapoint?datapoint_code=${Datapoint_Code}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status Code = 200" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="getDatapointItems" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="getDatapointItems : ${Datapoint_Code}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getDatapointItems" enabled="true">
            <stringProp name="HTTPSampler.path">/${Env}/getDatapointItems?datapoint_code=${Datapoint_Code}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status Code = 200" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="postDatapointValues" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="postDatapointValues : ${Datapoint_Code}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="Random Variable" enabled="true">
            <stringProp name="maximumValue">99</stringProp>
            <stringProp name="minimumValue">0</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">true</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">random</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="postDatapointValues" enabled="true">
            <stringProp name="HTTPSampler.path">/${Env}/postDatapointValues?datapoint_code=${Datapoint_Code}&amp;organization_id=${Org_ID}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;user_email&quot;: &quot;${User_Email}&quot;,&#xd;
    &quot;items&quot;: [&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest01&quot;,&#xd;
            &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        },&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest02&quot;,&#xd;
           &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        },&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest03&quot;,&#xd;
            &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        },&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest04&quot;,&#xd;
             &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        },&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest05&quot;,&#xd;
            &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        },&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest06&quot;,&#xd;
            &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        },&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest09&quot;,&#xd;
            &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        },&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest10&quot;,&#xd;
            &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        },&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest11&quot;,&#xd;
           &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        },&#xd;
        {&#xd;
            &quot;item_code&quot;: &quot;Rest12&quot;,&#xd;
           &quot;value&quot;:&quot;${__Random(1,100)}&quot;,&#xd;
            &quot;value_type&quot;: &quot;numeric&quot;,&#xd;
            &quot;not_relevant&quot;: false&#xd;
        }&#xd;
    ],&#xd;
    &quot;is_submitted&quot;: false,&#xd;
    &quot;selected_currency&quot;: {&#xd;
        &quot;currency_code&quot;: &quot;&quot;,&#xd;
        &quot;value&quot;: 1&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status Code = 200" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="postDatapointComments" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="postDatapointComments : ${Datapoint_Code}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="postDatapointComments" enabled="true">
            <intProp name="HTTPSampler.connect_timeout">10000</intProp>
            <intProp name="HTTPSampler.response_timeout">60000</intProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/${Env}/postDatapointComments?datapoint_code=${Datapoint_Code}&amp;organization_id=${Org_ID}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;user_email&quot;: &quot;${User_Email}&quot;,&#xd;
  &quot;comment&quot;: {&#xd;
    &quot;content&quot;: &quot;Automation&quot;,&#xd;
    &quot;attachments&quot;: [&#xd;
      {&#xd;
        &quot;file_key&quot;: &quot;DataPointLocatorr.pdf&quot;,&#xd;
        &quot;url&quot;: &quot;&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;datapoint_value&quot;: 0,&#xd;
    &quot;current_role&quot;: &quot;data point entry operator&quot;,&#xd;
    &quot;technical_id&quot;: &quot;73f00c4c-b23a-41d4-a0bb-98ce35f0b85d&quot;,&#xd;
    &quot;parent_id&quot;: null,&#xd;
    &quot;type&quot;: &quot;editor&quot;&#xd;
  }&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status Code = 200" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="getRbac" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="getRbac : ${User_Email}" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getRbac" enabled="true">
            <intProp name="HTTPSampler.connect_timeout">10000</intProp>
            <intProp name="HTTPSampler.response_timeout">20000</intProp>
            <stringProp name="HTTPSampler.domain">c2jd1duph3.execute-api.eu-west-1.amazonaws.com</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/int/getRbac?user_email=${User_Email}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion Status Code = 200" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\apache-jmeter-5.6.3\TestScripts\ESG_Load_Test_Dry_Run\Results\ESG_Load_Test_Result.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\apache-jmeter-5.6.3\TestScripts\ESG_Load_Test_Dry_Run\Results\ESG_Load_Test_Result.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\apache-jmeter-5.6.3\TestScripts\ESG_Load_Test_Dry_Run\Results\ESG_Load_Test_Result.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\apache-jmeter-5.6.3\TestScripts\ESG_Load_Test_Dry_Run\Results\ESG_Load_Test_Result.jtl</stringProp>
        <longProp name="interval_grouping">5000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
        <stringProp name="ConstantTimer.delay">5000</stringProp>
      </ConstantTimer>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\apache-jmeter-5.6.3\TestScripts\ESG_Load_Test_Dry_Run\Results\ESG_Load_Test_Result.jtl</stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
